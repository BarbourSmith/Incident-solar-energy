{
    "atomType": "Molecule",
    "name": "Incident solar energy",
    "x": 0,
    "y": 0,
    "uniqueID": 849008,
    "ioValues": [
        {
            "name": "Geometry",
            "ioValue": 10
        }
    ],
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Input",
            "name": "Geometry",
            "x": 0.0212298682284041,
            "y": 0.45801526717557256,
            "uniqueID": 400978,
            "ioValues": []
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.44697720515361744,
            "y": 0.24521072796934865,
            "uniqueID": 296208,
            "ioValues": [
                {
                    "name": "Input1",
                    "ioValue": 10
                }
            ],
            "code": "//You can learn more about all of the available methods at https://jsxcad.js.org/app/UserGuide.html \n\n\nfunction main(Input1){\n\n  //console.log(\"At the beginning\")\n  //console.log(Input1)\n\n  const incidentSolarEnergyPerMeter = 1000; //watts/m^2\n  const incidentSolarEnergyPerMM    = incidentSolarEnergyPerMeter / 1000000;\n\n  const angleOfTheSun = -29.7; //degrees...totall aproximation because obvously the sun moves. Found from https://www.solarpaneltilt.com/\n\n  //Offset our angle by where the sun is\n  const rotatedShape = Input1.rotateY(angleOfTheSun);\n  \n  //console.log(\"After rotate\");\n  \n  const incidentEnergy = incidentSolarEnergyPerMM*rotatedShape.squash().size().area;\n  //console.log(incidentEnergy);\n  \n  \n  return incidentEnergy;\n}\n\nreturn main(Input1)"
        },
        {
            "atomType": "Readme",
            "name": "README",
            "x": 0.26560951437066405,
            "y": 0.685823754789272,
            "uniqueID": 766049,
            "ioValues": [],
            "readmeText": "Returns a rough approximation of the total solar energy incident on a input geometry. Very rough because it assumes a static sun position."
        },
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.9766734279918864,
            "y": 0.5572519083969465,
            "ioValues": []
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Input1",
            "ap2Primary": false,
            "ap1ID": 400978,
            "ap2ID": 296208
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 296208
        }
    ],
    "fileTypeVersion": 1,
    "filetypeVersion": 1,
    "circleSegmentSize": 2
}