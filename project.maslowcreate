{
    "atomType": "Molecule",
    "name": "Incident solar energy",
    "x": 0,
    "y": 0,
    "uniqueID": 849008,
    "ioValues": [
        {
            "name": "Geometry",
            "ioValue": 10
        }
    ],
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Input",
            "name": "Geometry",
            "x": 0.013333333333333334,
            "y": 0.45801526717557256,
            "uniqueID": 400978,
            "ioValues": []
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.5297619047619048,
            "y": 0.32307692307692304,
            "uniqueID": 358038,
            "ioValues": [
                {
                    "name": "Input1",
                    "ioValue": 10
                }
            ],
            "code": "//You can learn more about all of the available methods at https://jsxcad.js.org/app/UserGuide.html \n//Inputs:[Input1];\n\n\nconst incidentSolarEnergyPerMeter = 1000; //watts/m^2\nconst incidentSolarEnergyPerMM = incidentSolarEnergyPerMeter / 1000000;\n\nconst angleOfTheSun = -29.7; //degrees...totall aproximation because obvously the sun moves. Found from https://www.solarpaneltilt.com/\n\n//Offset our angle by where the sun is\nconst rotatedShape = Input1.rotateY(angleOfTheSun/360);\n\n//console.log('After rotate');\n\nconst pannelSize = rotatedShape.cast().size();\n\nconst incidentEnergy = incidentSolarEnergyPerMM * pannelSize.length * pannelSize.width;\n\n//log('Incident energy: ' + incidentEnergy);\n\nreturn incidentEnergy;"
        },
        {
            "atomType": "Readme",
            "name": "README",
            "x": 0.5912698412698413,
            "y": 0.8338461538461539,
            "uniqueID": 766049,
            "ioValues": [],
            "readmeText": "Returns a rough approximation of the total solar energy incident on a input geometry. Very rough because it assumes a static sun position.",
            "global": true
        },
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.9766734279918864,
            "y": 0.5572519083969465,
            "uniqueID": 588971,
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": "source/849008/358038Code"
                }
            ]
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "number or geometry",
            "ap2Name": "Input1",
            "ap2Primary": false,
            "ap1ID": 400978,
            "ap2ID": 358038
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 358038,
            "ap2ID": 588971
        }
    ],
    "fileTypeVersion": 1,
    "simplify": false,
    "unitsIndex": 0,
    "filetypeVersion": 1,
    "circleSegmentSize": 2
}